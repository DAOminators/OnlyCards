[gd_scene load_steps=14 format=3 uid="uid://ccpeukrdsfbkm"]

[ext_resource type="Shader" path="res://shaders/fake_3D.gdshader" id="1_7h7yf"]
[ext_resource type="Shader" path="res://shaders/dissolve.gdshader" id="1_8jfk0"]
[ext_resource type="Texture2D" uid="uid://bpg0pvc0eplo" path="res://assets/Card/card-front-templateCard Front.jpg" id="2_1650l"]
[ext_resource type="Texture2D" uid="uid://bgfv3323e4ipl" path="res://assets/Card/card-front-templateCard Back.jpg" id="3_b3vto"]
[ext_resource type="Texture2D" uid="uid://d0a3btmlyy48d" path="res://textures/Queen_of_spades2.svg.png" id="3_nlmn6"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_kntej"]
seed = -15
frequency = 0.0021
fractal_octaves = 4

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_bboy4"]
noise = SubResource("FastNoiseLite_kntej")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3ph3s"]
resource_local_to_scene = true
shader = ExtResource("1_8jfk0")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.03
shader_parameter/burn_color = Color(1.5, 0.924, 0, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_bboy4")

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_7aqjh"]

[sub_resource type="GDScript" id="GDScript_wo784"]
script/source = "extends Button

@export var angle_x_max: float = 15.0
@export var angle_y_max: float = 15.0
@export var max_offset_shadow: float = 50.0

@export_category(\"Oscillator\")
@export var spring: float = 150.0
@export var damp: float = 10.0
@export var velocity_multiplier: float = 2.0

@export var front_texture: Texture
@export var back_texture: Texture

var is_front: bool = true

var displacement: float = 0.0 
var oscillator_velocity: float = 0.0

var tween_rot: Tween
var tween_hover: Tween
var tween_destroy: Tween
var tween_handle: Tween

var last_mouse_pos: Vector2
var mouse_velocity: Vector2
var following_mouse: bool = false
var last_pos: Vector2
var velocity: Vector2

@onready var card_texture: TextureRect = $CardTexture
@onready var shadow = $Shadow
@onready var collision_shape = $DestroyArea/CollisionShape2D

func _ready() -> void:
	# Convert to radians because lerp_angle is using that
	angle_x_max = deg_to_rad(angle_x_max)
	angle_y_max = deg_to_rad(angle_y_max)
	collision_shape.set_deferred(\"disabled\", true)

func _process(delta: float) -> void:
	rotate_velocity(delta)
	follow_mouse(delta)
	handle_shadow(delta)
	
func destroy() -> void:
	card_texture.use_parent_material = true
	if tween_destroy and tween_destroy.is_running():
		tween_destroy.kill()
	tween_destroy = create_tween().set_ease(Tween.EASE_IN_OUT).set_trans(Tween.TRANS_CUBIC)
	tween_destroy.tween_property(material, \"shader_parameter/dissolve_value\", 0.0, 2.0).from(1.0)
	tween_destroy.parallel().tween_property(shadow, \"self_modulate:a\", 0.0, 1.0)

func rotate_velocity(delta: float) -> void:
	if not following_mouse: return
	var center_pos: Vector2 = global_position - (size/2.0)
	print(\"Pos: \", center_pos)
	print(\"Pos: \", last_pos)
	# Compute the velocity
	velocity = (position - last_pos) / delta
	last_pos = position
	
	print(\"Velocity: \", velocity)
	oscillator_velocity += velocity.normalized().x * velocity_multiplier
	
	# Oscillator stuff
	var force = -spring * displacement - damp * oscillator_velocity
	oscillator_velocity += force * delta
	displacement += oscillator_velocity * delta
	
	rotation = displacement

func handle_shadow(delta: float) -> void:
	# Y position is enver changed.
	# Only x changes depending on how far we are from the center of the screen
	var center: Vector2 = get_viewport_rect().size / 2.0
	var distance: float = global_position.x - center.x
	
	shadow.position.x = lerp(0.0, -sign(distance) * max_offset_shadow, abs(distance/(center.x)))

func follow_mouse(delta: float) -> void:
	if not following_mouse: return
	var mouse_pos: Vector2 = get_global_mouse_position()
	global_position = mouse_pos - (size/2.0)
	
func flip_card() -> void:
	is_front = !is_front
	card_texture.texture = front_texture if is_front else back_texture

func handle_mouse_click(event: InputEvent) -> void:
	if not event is InputEventMouseButton: return
	if event.button_index != MOUSE_BUTTON_LEFT: return
	
	if event.is_pressed():
		following_mouse = true
	else:
		# drop card
		following_mouse = false
		collision_shape.set_deferred(\"disabled\", false)
		if tween_handle and tween_handle.is_running():
			tween_handle.kill()
		tween_handle = create_tween().set_ease(Tween.EASE_IN_OUT).set_trans(Tween.TRANS_CUBIC)
		tween_handle.tween_property(self, \"rotation\", 0.0, 0.3)
		flip_card()
		
func _on_gui_input(event: InputEvent) -> void:
	
	handle_mouse_click(event)
	
	# Don't compute rotation when moving the card
	if following_mouse: return
	if not event is InputEventMouseMotion: return
	
	# Handles rotation
	# Get local mouse pos
	var mouse_pos: Vector2 = get_local_mouse_position()
	#print(\"Mouse: \", mouse_pos)
	#print(\"Card: \", position + size)
	var diff: Vector2 = (position + size) - mouse_pos

	var lerp_val_x: float = remap(mouse_pos.x, 0.0, size.x, 0, 1)
	var lerp_val_y: float = remap(mouse_pos.y, 0.0, size.y, 0, 1)
	#print(\"Lerp val x: \", lerp_val_x)
	#print(\"lerp val y: \", lerp_val_y)

	var rot_x: float = rad_to_deg(lerp_angle(-angle_x_max, angle_x_max, lerp_val_x))
	var rot_y: float = rad_to_deg(lerp_angle(angle_y_max, -angle_y_max, lerp_val_y))
	#print(\"Rot x: \", rot_x)
	#print(\"Rot y: \", rot_y)
	
	card_texture.material.set_shader_parameter(\"x_rot\", rot_y)
	card_texture.material.set_shader_parameter(\"y_rot\", rot_x)

func _on_mouse_entered() -> void:
	if tween_hover and tween_hover.is_running():
		tween_hover.kill()
	tween_hover = create_tween().set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_ELASTIC)
	tween_hover.tween_property(self, \"scale\", Vector2(1.2, 1.2), 0.5)

func _on_mouse_exited() -> void:
	# Reset rotation
	if tween_rot and tween_rot.is_running():
		tween_rot.kill()
	tween_rot = create_tween().set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_BACK).set_parallel(true)
	tween_rot.tween_property(card_texture.material, \"shader_parameter/x_rot\", 0.0, 0.5)
	tween_rot.tween_property(card_texture.material, \"shader_parameter/y_rot\", 0.0, 0.5)
	
	# Reset scale
	if tween_hover and tween_hover.is_running():
		tween_hover.kill()
	tween_hover = create_tween().set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_ELASTIC)
	tween_hover.tween_property(self, \"scale\", Vector2.ONE, 0.55)
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_lpink"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cho03"]
resource_local_to_scene = true
shader = ExtResource("1_7h7yf")
shader_parameter/rect_size = Vector2(152, 207)
shader_parameter/fov = 90.0
shader_parameter/cull_back = true
shader_parameter/y_rot = 0.0
shader_parameter/x_rot = 0.0
shader_parameter/inset = 0.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_xsth3"]
size = Vector2(130, 175)

[node name="Card" type="Button"]
material = SubResource("ShaderMaterial_3ph3s")
custom_minimum_size = Vector2(152, 207)
offset_right = 152.0
offset_bottom = 207.0
pivot_offset = Vector2(76, 103.5)
theme_override_styles/focus = SubResource("StyleBoxEmpty_7aqjh")
theme_override_styles/disabled = SubResource("StyleBoxEmpty_7aqjh")
theme_override_styles/hover = SubResource("StyleBoxEmpty_7aqjh")
theme_override_styles/pressed = SubResource("StyleBoxEmpty_7aqjh")
theme_override_styles/normal = SubResource("StyleBoxEmpty_7aqjh")
script = SubResource("GDScript_wo784")
velocity_multiplier = 1.0
front_texture = ExtResource("2_1650l")
back_texture = ExtResource("3_b3vto")

[node name="Shadow" type="TextureRect" parent="."]
modulate = Color(0, 0, 0, 1)
self_modulate = Color(1, 1, 1, 0.168627)
show_behind_parent = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = 24.0
offset_bottom = 24.0
grow_horizontal = 2
grow_vertical = 2
texture = SubResource("CompressedTexture2D_lpink")
expand_mode = 1

[node name="CardTexture" type="TextureRect" parent="."]
material = SubResource("ShaderMaterial_cho03")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("3_nlmn6")
expand_mode = 1

[node name="RichTextLabel" type="RichTextLabel" parent="CardTexture"]
layout_mode = 0
offset_left = 44.0
offset_top = -31.0
offset_right = 156.0
offset_bottom = 9.0
text = "Queen"

[node name="DestroyArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="DestroyArea"]
position = Vector2(75, 104.5)
shape = SubResource("RectangleShape2D_xsth3")
disabled = true

[connection signal="gui_input" from="." to="." method="_on_gui_input"]
[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_mouse_exited"]
